sigma2 = SSE/n
log_likelihood = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
ts = log_likelihood - 3.84/2
result=c()
left = seq(W.pred[j]-0.05,W.pred[j],by=0.01)
right = seq(W.pred[j],W.pred[j]+0.05,by=0.01)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = ProfLike(X,Y,W.pl,3,ind=j,val=i)
else pl = ProfLike(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
for(i in right){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
if(ts<result[1]|ts<result[length(result)]){
result=c()
left = seq(W.pred[j]-0.2,W.pred[j],by=0.04)
right = seq(W.pred[j],W.pred[j]+0.2,by=0.04)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
}
plot(x,result,type='b',ylab = 'Log Likelihood',xlab = paste('W',j,sep='_'))
abline(h=ts,col=4,lty=3)
abline(v=W[j],col=3,lty=2)
abline(v=W.pred[j],col=2)
dist = ((result-rep(ts,21))^2)
ci = x[sort(c(which.min(dist),which.min(dist[-which.min(dist)])))]
x[dist %in% sort(dist)[1:4]]
result[dist %in% sort(dist)[1:4]]
lin_int1 = approx(x[dist %in% sort(dist)[1:4]][1:2],result[dist %in% sort(dist)[1:4]][1:2])
dist = ((lin_int1$y-rep(ts,50))^2)
ci[1] = lin_int1$x[which.min(dist)]
lin_int2 = approx(x[dist %in% sort(dist)[1:4]][3:4],result[dist %in% sort(dist)[1:4]][3:4])
dist = ((lin_int2$y-rep(ts,50))^2)
ci[2] = lin_int2$x[which.min(dist)]
dist = ((result-rep(ts,21))^2)
prof_likelihood_ci(X,Y,W,3)
prof_likelihood_ci(X,Y,W,3)
set.seed(11)
X = matrix(rnorm(500*5,mean=0,sd=1),ncol=5)
W = my_runif(22,1)
set.seed(10)
e = rnorm(500,0,0.01)
Y = nn_pred(X, W, 3) + e
set.seed(22)
nn = nn_model_sel(X,Y,10,n_iter=10,inf_crit='BIC',method='top_down')
W.pred = nn$weights_min[[3]]
n=nrow(X)
j=1
for(j in 1:6){
pred = nn_pred(X,W.pred,3)
SSE = sum((Y-pred)^2)
sigma2 = SSE/n
log_likelihood = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
ts = log_likelihood - 3.84/2
result=c()
left = seq(W.pred[j]-0.05,W.pred[j],by=0.01)
right = seq(W.pred[j],W.pred[j]+0.05,by=0.01)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
if(ts<result[1]|ts<result[length(result)]){
result=c()
left = seq(W.pred[j]-0.2,W.pred[j],by=0.04)
right = seq(W.pred[j],W.pred[j]+0.2,by=0.04)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
}
plot(x,result,type='b',ylab = 'Log Likelihood',xlab = paste('W',j,sep='_'))
abline(h=ts,col=4,lty=3)
abline(v=W[j],col=3,lty=2)
abline(v=W.pred[j],col=2)
}
dist = ((result-rep(ts,21))^2)
ci = x[sort(c(which.min(dist),which.min(dist[-which.min(dist)])))]
x[dist %in% sort(dist)[1:4]]
result[dist %in% sort(dist)[1:4]]
lin_int1 = approx(x[dist %in% sort(dist)[1:4]][1:2],result[dist %in% sort(dist)[1:4]][1:2])
dist = ((lin_int1$y-rep(ts,50))^2)
ci[1] = lin_int1$x[which.min(dist)]
lin_int2 = approx(x[dist %in% sort(dist)[1:4]][3:4],result[dist %in% sort(dist)[1:4]][3:4])
dist = ((lin_int2$y-rep(ts,50))^2)
ci[2] = lin_int2$x[which.min(dist)]
set.seed(11)
X = matrix(rnorm(500*5,mean=0,sd=1),ncol=5)
W = my_runif(22,1)
set.seed(10)
e = rnorm(500,0,0.01)
Y = nn_pred(X, W, 3) + e
set.seed(22)
nn = nn_model_sel(X,Y,10,n_iter=10,inf_crit='BIC',method='top_down')
W.pred = nn$weights_min[[3]]
n=nrow(X)
j=1
for(j in 1:6){
pred = nn_pred(X,W.pred,3)
SSE = sum((Y-pred)^2)
sigma2 = SSE/n
log_likelihood = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
ts = log_likelihood - 3.84/2
result=c()
left = seq(W.pred[j]-0.05,W.pred[j],by=0.01)
right = seq(W.pred[j],W.pred[j]+0.05,by=0.01)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
if(ts<result[1]|ts<result[length(result)]){
result=c()
left = seq(W.pred[j]-0.2,W.pred[j],by=0.04)
right = seq(W.pred[j],W.pred[j]+0.2,by=0.04)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
}
plot(x,result,type='b',ylab = 'Log Likelihood',xlab = paste('W',j,sep='_'))
abline(h=ts,col=4,lty=3)
abline(v=W[j],col=3,lty=2)
abline(v=W.pred[j],col=2)
}
dist = ((result-rep(ts,21))^2)
ci = x[sort(c(which.min(dist),which.min(dist[-which.min(dist)])))]
x[dist %in% sort(dist)[1:4]]
result[dist %in% sort(dist)[1:4]]
lin_int1 = approx(x[dist %in% sort(dist)[1:4]][1:2],result[dist %in% sort(dist)[1:4]][1:2])
dist = ((lin_int1$y-rep(ts,50))^2)
ci[1] = lin_int1$x[which.min(dist)]
lin_int2 = approx(x[dist %in% sort(dist)[1:4]][3:4],result[dist %in% sort(dist)[1:4]][3:4])
dist = ((lin_int2$y-rep(ts,50))^2)
ci[2] = lin_int2$x[which.min(dist)]
set.seed(11)
X = matrix(rnorm(500*5,mean=0,sd=1),ncol=5)
W = my_runif(22,1)
set.seed(10)
e = rnorm(500,0,0.01)
Y = nn_pred(X, W, 3) + e
set.seed(22)
nn = nn_model_sel(X,Y,10,n_iter=10,inf_crit='BIC',method='top_down')
W.pred = nn$weights_min[[3]]
n=nrow(X)
j=1
for(j in 1:6){
pred = nn_pred(X,W.pred,3)
SSE = sum((Y-pred)^2)
sigma2 = SSE/n
log_likelihood = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
ts = log_likelihood - 3.84/2
result=c()
left = seq(W.pred[j]-0.05,W.pred[j],by=0.01)
right = seq(W.pred[j],W.pred[j]+0.05,by=0.01)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
if(ts<result[1]|ts<result[length(result)]){
result=c()
left = seq(W.pred[j]-0.2,W.pred[j],by=0.04)
right = seq(W.pred[j],W.pred[j]+0.2,by=0.04)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
}
plot(x,result,type='b',ylab = 'Log Likelihood',xlab = paste('W',j,sep='_'))
abline(h=ts,col=4,lty=3)
abline(v=W[j],col=3,lty=2)
abline(v=W.pred[j],col=2)
}
dist = ((result-rep(ts,21))^2)
ci = x[sort(c(which.min(dist),which.min(dist[-which.min(dist)])))]
x[dist %in% sort(dist)[1:4]]
result[dist %in% sort(dist)[1:4]]
lin_int1 = approx(x[dist %in% sort(dist)[1:4]][1:2],result[dist %in% sort(dist)[1:4]][1:2])
dist = ((lin_int1$y-rep(ts,50))^2)
ci[1] = lin_int1$x[which.min(dist)]
lin_int2 = approx(x[dist %in% sort(dist)[1:4]][3:4],result[dist %in% sort(dist)[1:4]][3:4])
dist = ((lin_int2$y-rep(ts,50))^2)
ci[2] = lin_int2$x[which.min(dist)]
set.seed(11)
X = matrix(rnorm(500*5,mean=0,sd=1),ncol=5)
W = my_runif(22,1)
set.seed(10)
e = rnorm(500,0,0.01)
Y = nn_pred(X, W, 3) + e
set.seed(22)
nn = nn_model_sel(X,Y,10,n_iter=100,inf_crit='BIC',method='top_down')
W.pred = nn$weights_min[[3]]
n=nrow(X)
j=1
for(j in 1:6){
pred = nn_pred(X,W.pred,3)
SSE = sum((Y-pred)^2)
sigma2 = SSE/n
log_likelihood = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
ts = log_likelihood - 3.84/2
result=c()
left = seq(W.pred[j]-0.05,W.pred[j],by=0.01)
right = seq(W.pred[j],W.pred[j]+0.05,by=0.01)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = prof_likelihood(X,Y,W.pl,3,ind=j,val=i)
else pl = prof_likelihood(X,Y,pl$OptW[-j],3,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
if(ts<result[1]|ts<result[length(result)]){
result=c()
left = seq(W.pred[j]-0.2,W.pred[j],by=0.04)
right = seq(W.pred[j],W.pred[j]+0.2,by=0.04)
W.pl = W.pred[-j]
for(i in rev(left)){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result=rev(result)
for(i in right){
if(i == W.pred[j]) pl = ProfLike(W.pl,3,X,Y,ind=j,val=i)
else pl = ProfLike(pl$OptW[-j],3,X,Y,ind=j,val=i)
result = c(result,pl$logl)
}
result = result[-length(result)/2]
x = c(left,right[-1])
}
plot(x,result,type='b',ylab = 'Log Likelihood',xlab = paste('W',j,sep='_'))
abline(h=ts,col=4,lty=3)
abline(v=W[j],col=3,lty=2)
abline(v=W.pred[j],col=2)
}
dist = ((result-rep(ts,21))^2)
ci = x[sort(c(which.min(dist),which.min(dist[-which.min(dist)])))]
x[dist %in% sort(dist)[1:4]]
result[dist %in% sort(dist)[1:4]]
lin_int1 = approx(x[dist %in% sort(dist)[1:4]][1:2],result[dist %in% sort(dist)[1:4]][1:2])
dist = ((lin_int1$y-rep(ts,50))^2)
ci[1] = lin_int1$x[which.min(dist)]
lin_int2 = approx(x[dist %in% sort(dist)[1:4]][3:4],result[dist %in% sort(dist)[1:4]][3:4])
dist = ((lin_int2$y-rep(ts,50))^2)
ci[2] = lin_int2$x[which.min(dist)]
devtools::document()
devtools::load_all()
#Create Data
set.seed(123)
X = matrix(rnorm(500*5,mean=0,sd=1),ncol=5)
W = runif(22,min=-1,max=1)
#Network Output
set.seed(10)
e = rnorm(500,0,0.01)
Y = nn_pred(X,W,3) + e
X_test = cbind(X,rnorm(500,0,1))
set.seed(10)
result = nn_model_sel(X_test,Y,q_max=10,n_iter=10,inf_crit='BIC',method='top_down')
a = c()
b=c()
i=1
a[i] = var_imp(i,10,result$weights_min[[3]],3,X_test,Y)$BIC.min
a[i] = var_imp(X_test,Y,i,10,result$weights_min[[3]],3)$inf_crit_min
a
var_imp(X_test,Y,ind=i,n_iter=10,W=result$weights_min[[3]],q=3)
X=X_test
ind=1
n_iter=10
W=result$weights_min[[3]]
q=3
df = as.data.frame(cbind(X[,-i], Y))
colnames(df)[ncol(df)] = 'Y'
n = nrow(X)
inf_crit = rep(NA, n)
k = (ncol(X))*q + (q + 1)
remove_vec = rep(NA, q)
for(j in 1:q){
remove_vec[j] = (j - 1)*(ncol(X) + 1) + 1 + ind
}
W_new = W[-remove_vec]
weight_matrix_init = matrix(rep(W_new, n), nrow = n, byrow = T) + runif(k*n, min = -unif/2, max = unif/2)
unif=1
weight_matrix_init = matrix(rep(W_new, n), nrow = n, byrow = T) + runif(k*n, min = -unif/2, max = unif/2)
weight_matrix = matrix(rep(NA,n*k), ncol = k)
log_likelihood = rep(NA, n)
for(i in 1:n_iter){
nn_model =  nnet::nnet(Y~., data = df, size = q, trace = F, linout = T, Wts = weight_matrix_init[i,])
weight_matrix[i,] = nn_model$wts
SSE = sum((df$Y - nn_model$fitted.values)^2)
sigma2 = SSE/n
log_likelihood[i] = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
inf_crit[i] = log(n)*k - 2*log_likelihood[i]
}
full_model = nn_pred(X, W, q)
k_full = (ncol(X) + 1)*q + (q + 1)
SSE = sum((df$Y - full_model)^2)
sigma2 = SSE/n
log_likelihood_full = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
inf_crit_full = log(n)*k_full - 2*log_likelihood_full
likelihood_ratio = -2*(max(log_likelihood) - log_likelihood_full)
deg_freedom = k_full - k
p_value = pchisq(likelihood_ratio, deg_freedom, lower.tail = F)
inf_crit
df = as.data.frame(cbind(X[,-i], Y))
colnames(df)[ncol(df)] = 'Y'
n = nrow(X)
inf_crit_vec = rep(NA, n_iter)
k = (ncol(X))*q + (q + 1)
remove_vec = rep(NA, q)
for(j in 1:q){
remove_vec[j] = (j - 1)*(ncol(X) + 1) + 1 + ind
}
W_new = W[-remove_vec]
weight_matrix_init = matrix(rep(W_new, n), nrow = n, byrow = T) + runif(k*n, min = -unif/2, max = unif/2)
weight_matrix = matrix(rep(NA,n*k), ncol = k)
log_likelihood = rep(NA, n_iter)
for(i in 1:n_iter){
nn_model =  nnet::nnet(Y~., data = df, size = q, trace = F, linout = T, Wts = weight_matrix_init[i,])
weight_matrix[i,] = nn_model$wts
SSE = sum((df$Y - nn_model$fitted.values)^2)
sigma2 = SSE/n
log_likelihood[i] = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
inf_crit_vec[i] = log(n)*k - 2*log_likelihood[i]
}
full_model = nn_pred(X, W, q)
k_full = (ncol(X) + 1)*q + (q + 1)
SSE = sum((df$Y - full_model)^2)
sigma2 = SSE/n
log_likelihood_full = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
inf_crit_full = log(n)*k_full - 2*log_likelihood_full
likelihood_ratio = -2*(max(log_likelihood) - log_likelihood_full)
deg_freedom = k_full - k
p_value = pchisq(likelihood_ratio, deg_freedom, lower.tail = F)
inf_crit_vec#
inf_crit_vec
df = as.data.frame(cbind(X[,-i], Y))
colnames(df)[ncol(df)] = 'Y'
n = nrow(X)
inf_crit_vec = rep(NA, n_iter)
k = (ncol(X))*q + (q + 1)
remove_vec = rep(NA, q)
for(j in 1:q){
remove_vec[j] = (j - 1)*(ncol(X) + 1) + 1 + ind
}
W_new = W[-remove_vec]
weight_matrix_init = matrix(rep(W_new, n), nrow = n, byrow = T) + runif(k*n, min = -unif/2, max = unif/2)
weight_matrix = matrix(rep(NA,n*k), ncol = k)
log_likelihood = rep(NA, n_iter)
for(i in 1:n_iter){
nn_model =  nnet::nnet(Y~., data = df, size = q, trace = F, linout = T, Wts = weight_matrix_init[i,])
weight_matrix[i,] = nn_model$wts
SSE = sum((df$Y - nn_model$fitted.values)^2)
sigma2 = SSE/n
log_likelihood[i] = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
inf_crit_vec[i] = log(n)*k - 2*log_likelihood[i]
}
full_model = nn_pred(X, W, q)
k_full = (ncol(X) + 1)*q + (q + 1)
SSE = sum((df$Y - full_model)^2)
sigma2 = SSE/n
log_likelihood_full = (-n/2)*log(2*pi*sigma2) - SSE/(2*sigma2)
inf_crit_full = log(n)*k_full - 2*log_likelihood_full
likelihood_ratio = -2*(max(log_likelihood) - log_likelihood_full)
deg_freedom = k_full - k
p_value = pchisq(likelihood_ratio, deg_freedom, lower.tail = F)
inf_crit_vec
min(inf_crit_vec)
inf_crit_full
max(log_likelihood)
log_likelihood_full
deg_freedom
likelihood_ratio
p_value
devtools::load_all()
#Create Data
set.seed(123)
X = matrix(rnorm(500*5,mean=0,sd=1),ncol=5)
W = runif(22,min=-1,max=1)
#Network Output
set.seed(10)
e = rnorm(500,0,0.01)
Y = nn_pred(X,W,3) + e
X_test = cbind(X,rnorm(500,0,1))
set.seed(10)
result = nn_model_sel(X_test,Y,q_max=10,n_iter=10,inf_crit='BIC',method='top_down')
a = c()
b=c()
for(i in 1:6){
a[i] = var_imp(X_test,Y,ind=i,n_iter=10,W=result$weights_min[[3]],q=3)$inf_crit_min
b[i] = var_imp(i,10,result$weights_min[[3]],3,X_test,Y)$p_val
}
for(i in 1:6){
a[i] = var_imp(X_test,Y,ind=i,n_iter=10,W=result$weights_min[[3]],q=3)$inf_crit_min
b[i] = var_imp(X_test,Y,i,10,result$weights_min[[3]],3)$p_val
}
a
b
devtools::document()
X = matrix(rnorm(100*5), ncol=5)
W=rnorm(22)
ind=1
q=3
val = rep(0, ncol(X))
length = 100
range = c(-3, 3)
val = val[-ind]
X_ind = seq(from = range[1], to = range[2], length.out = length)
X_val = matrix(rep(val, length), nrow = length, byrow = T)
new = cbind(X_val, X_ind)
id = c(1:ncol(X_val), ind - 0.5)
val
X_ind
X_val
new
id = c(1:ncol(X_val), ind - 0.5)
id
X_new = new[, order(id)]
X_new
pred = nn_pred(X_new, W, q)
devtools::load_all()
pred = nn_pred(X_new, W, q)
pred
plot(X_ind, pred)
devtools::document()
